<?php

namespace {{ namespace }};

use App\Exports\FilamentExcelExport;
use App\Filament\Resources\{{ resourceClass }}\Pages;
use App\Filament\Resources\{{ resourceClass }}\RelationManagers;
use App\Models\{{ model }};
use Filament\Forms;
use Filament\Resources\Form;
use Filament\Resources\Resource;
use Filament\Resources\Table;
use Filament\Tables;
use Filament\Tables\Filters\Layout;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;
use App\Traits\HasModelLabelAndRecordTitleAttribute;
use pxlrbt\FilamentExcel\Actions\Tables\ExportAction;
use pxlrbt\FilamentExcel\Actions\Tables\ExportBulkAction;

class {{ resourceClass }} extends Resource
{
    use HasModelLabelAndRecordTitleAttribute;

    protected static ?string $model = {{ modelClass }}::class;

    protected static ?string $navigationIcon = 'heroicon-o-collection';

    protected static ?string $navigationGroup = '';

    protected static ?int $navigationSort = 1;

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
{{ formSchema }}
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
{{ tableColumns }}
            ])
            ->filters([
{{ tableFilters }}
            ], layout: Layout::AboveContent)
            ->actions([
{{ tableActions }}
            ])
            ->bulkActions([
{{ tableBulkActions }}
                ExportBulkAction::make()
                    ->exports([
                        FilamentExcelExport::make(),
                    ]),
            ])
            ->headerActions([
                ExportAction::make('export_with_dates')
                    ->exports([
                        FilamentExcelExport::make('modal')
                            ->setDefaultFormSchema()
                    ])
                    ->modalHeading(__('filament-admin.excel.header-action.label'))
                    ->color('success'),
            ]);
    }
{{ relations }}
    public static function getPages(): array
    {
        return [
{{ pages }}
        ];
    }{{ eloquentQuery }}
}
